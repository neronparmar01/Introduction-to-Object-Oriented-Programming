/***********************************************************************
// OOP244 Workshop 3 Part2: Member Functions and Privacy
// File reflect.cpp
// Version 1.0
// Date	2022/10/28
// Author Nargis Khan
// Description
// Tests Store module
//
// Revision History
// -----------------------------------------------------------
// Name   Neron Nelson Parmar   Date   2/6/23         Reason
//
/////////////////////////////////////////////////////////////////
***********************************************************************/


In this workshop3, we had two parts the name of these parts were LAB and DIY. The LAB was the first part whereas the DIY was the second part.
For the LAB part, we had two modules first on was the department module for cpp and second one was the header file. In this we were already given the main.cpp file
We had to create the Department.cpp and Department.h file. In tis module there were private and public funions. Moreover, i learnt the encapsulation concepts well. 
Similarly for the DIY part, there were in total four modules to be created the first one was Store module which had its cpp and header file. Following to it the second
module was Toys module it also had the cpp and the header file. The store module had the name of the store and how many toys it had and how many were to be added. Apparently,
the toys module had the name of the toy its price its number and so on. On the personal note I found the DIY part most difficult. However, the part that i found difficult was
in both the cpp files that is the Store.cpp and the Toys.cpp. Talking about the Toys.cpp file the thing that i found hard was to get the width for the output so i had to set the 
width of the using the code setw and and initialize the value in the function,

		std::cout << std::left << std::setw(15) << m_tname <<
                std::right << std::setw(10) << m_sku <<
                std::right << std::setw(6) << m_age <<
                std::right << std::setw(12) << std::fixed << std::setprecision(2) << m_price;

However, coming to the Store.cpp part in this the same thing was again faced but this time had to add the another issue, the issue i faced was the character filling according to the parameter
passed. Therefore, i had used the setfill(*) function to get the asterik sign

		if (flag)   // checks whether the value of the flag is true or not
        {
            std::cout << std::setfill('*') << std::setw(60) << "*" << std::endl;
            std::cout << m_sName << std::endl;
            std::cout << std::setfill('*') << std::setw(60) << "*" << std::endl;
            std::cout << "list of the toys\n";
            std::cout << std::right << std::setfill(' ') << std::setw(30) << "SKU" <<
                std::right << std::setfill(' ') << std::setw(10) << "Age" <<
                std::right << std::setfill(' ') << std::setw(11) << "Price" <<
                std::right << std::setfill(' ') << std::setw(10) << "Sale" <<
                std::endl;

Thus, it was a good opportunity to learn how to do encapsulation, defining the class type, using the member function for calling out.